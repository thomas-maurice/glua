# Copyright (c) 2024-2025 Thomas Maurice
# SPDX-License-Identifier: MIT

name: Tests

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: go-1.24-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          go-1.24-

    - name: Download dependencies
      run: go mod download

    - name: Run all tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./pkg/...

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: golangci-lint
      uses: https://github.com/golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Build stubgen
      run: go build -v ./cmd/stubgen

    - name: Build example
      working-directory: ./example
      run: go build -v .

  integration:
    name: Integration Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Run example
      working-directory: ./example
      run: |
        go run .
        echo "✓ Example completed successfully"

    - name: Generate stubs
      run: |
        go run ./cmd/stubgen -dir pkg/modules -output-dir /tmp/library
        test -f /tmp/library/kubernetes.gen.lua || (echo "kubernetes.gen.lua not generated" && exit 1)
        echo "✓ Stub generation successful"

  kubernetes:
    name: Kubernetes Integration Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install Kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/kubectl

    - name: Run Kubernetes integration test
      working-directory: ./example/kubernetes
      run: |
        chmod +x run-test.sh
        ./run-test.sh

  k8sclient:
    name: K8s Client Example Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install Kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/kubectl

    - name: Run k8sclient example test
      working-directory: ./example/k8sclient
      run: |
        chmod +x run-test.sh
        ./run-test.sh
